variable "resource_group_name_fr" {
  description = "Name of the resource group for France Central"
  type        = string
  default     = "learning-fr"
}

variable "resource_group_name_us" {
  description = "Name of the resource group for East US"
  type        = string
  default     = "learning-us"
}

variable "location_fr" {
  description = "Location for France Central resources"
  type        = string
  default     = "France Central"
}

variable "location_us" {
  description = "Location for East US resources"
  type        = string
  default     = "East US"
}

variable "admin_username" {
  description = "Admin username for the virtual machines"
  type        = string
  default     = "learning"
}

variable "admin_password" {
  description = "Admin password for the virtual machines"
  type        = string
  default     = "Redhat@12345" # Use any strong password you like
  sensitive   = true
}


variable "traffic_manager_name" {
  description = "Name of the Traffic Manager profile"
  type        = string
  default     = "geographictrafficmanager123"
}

variable "vm_size" {
  description = "Size of the virtual machines"
  type        = string
  default     = "Standard_B1s"
}

provider "azurerm" {
  features {}
  use_cli         = true
  subscription_id = "3cb5b17b-f702-4534-bf9d-f5e83dd19e4c"
}

resource "azurerm_resource_group" "rg_fr" {
  name     = var.resource_group_name_fr
  location = var.location_fr

}

resource "azurerm_resource_group" "rg_us" {
  name     = var.resource_group_name_us
  location = var.location_us

}

resource "azurerm_virtual_network" "vnet_fr" {
  name                = "vnet-fr"
  address_space       = ["10.0.0.0/16"]
  location            = var.location_fr
  resource_group_name = azurerm_resource_group.rg_fr.name

}

resource "azurerm_virtual_network" "vnet_us" {
  name                = "vnet-us"
  address_space       = ["10.1.0.0/16"]
  location            = var.location_us
  resource_group_name = azurerm_resource_group.rg_us.name

}

resource "azurerm_subnet" "subnet_fr" {
  name                 = "subnet-fr"
  resource_group_name  = azurerm_resource_group.rg_fr.name
  virtual_network_name = azurerm_virtual_network.vnet_fr.name
  address_prefixes     = ["10.0.1.0/24"]
}

resource "azurerm_subnet" "subnet_us" {
  name                 = "subnet-us"
  resource_group_name  = azurerm_resource_group.rg_us.name
  virtual_network_name = azurerm_virtual_network.vnet_us.name
  address_prefixes     = ["10.1.1.0/24"]
}

resource "azurerm_network_security_group" "nsg_fr" {
  name                = "nsg-fr"
  location            = var.location_fr
  resource_group_name = azurerm_resource_group.rg_fr.name

  security_rule {
    name                       = "allow_http"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "80"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

}

resource "azurerm_network_security_group" "nsg_us" {
  name                = "nsg-us"
  location            = var.location_us
  resource_group_name = azurerm_resource_group.rg_us.name

  security_rule {
    name                       = "allow_http"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "80"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

}

resource "azurerm_network_interface" "nic_fr" {
  name                = "nic-fr"
  location            = var.location_fr
  resource_group_name = azurerm_resource_group.rg_fr.name

  ip_configuration {
    name                          = "ipconfig-fr"
    subnet_id                     = azurerm_subnet.subnet_fr.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.server1_ip.id
  }

}

resource "azurerm_network_interface" "nic_us" {
  name                = "nic-us"
  location            = var.location_us
  resource_group_name = azurerm_resource_group.rg_us.name

  ip_configuration {
    name                          = "ipconfig-us"
    subnet_id                     = azurerm_subnet.subnet_us.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.server2_ip.id
  }

}

resource "azurerm_network_interface_security_group_association" "nic_fr_nsg" {
  network_interface_id      = azurerm_network_interface.nic_fr.id
  network_security_group_id = azurerm_network_security_group.nsg_fr.id
}

resource "azurerm_network_interface_security_group_association" "nic_us_nsg" {
  network_interface_id      = azurerm_network_interface.nic_us.id
  network_security_group_id = azurerm_network_security_group.nsg_us.id
}

resource "azurerm_public_ip" "server1_ip" {
  name                = "server1-public-ip"
  location            = var.location_fr
  resource_group_name = azurerm_resource_group.rg_fr.name
  allocation_method   = "Static"
  domain_name_label   = "server1-fr-demo" # must be unique in Azure

}

resource "azurerm_public_ip" "server2_ip" {
  name                = "server2-public-ip"
  location            = var.location_us
  resource_group_name = azurerm_resource_group.rg_us.name
  allocation_method   = "Static"
  domain_name_label   = "server2-us-demo" # must be unique in Azure

}

locals {
  script_fr = <<-EOT
    #!/bin/bash
    apt update -y
    apt install apache2 -y
    systemctl restart apache2
    echo "server1 france central" > /var/www/html/index.html
  EOT

  script_us = <<-EOT
    #!/bin/bash
    apt update -y
    apt install apache2 -y
    systemctl restart apache2
    echo "server2 east us" > /var/www/html/index.html
  EOT
}

resource "azurerm_linux_virtual_machine" "server1" {
  name                            = "server1-fr"
  resource_group_name             = azurerm_resource_group.rg_fr.name
  location                        = var.location_fr
  size                            = var.vm_size
  admin_username                  = var.admin_username
  admin_password                  = var.admin_password
  disable_password_authentication = false
  network_interface_ids           = [azurerm_network_interface.nic_fr.id]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
    disk_size_gb         = 30
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts"
    version   = "latest"
  }

  custom_data = base64encode(local.script_fr)
}

resource "azurerm_linux_virtual_machine" "server2" {
  name                            = "server2-us"
  resource_group_name             = azurerm_resource_group.rg_us.name
  location                        = var.location_us
  size                            = var.vm_size
  admin_username                  = var.admin_username
  admin_password                  = var.admin_password
  disable_password_authentication = false
  network_interface_ids           = [azurerm_network_interface.nic_us.id]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
    disk_size_gb         = 30
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts"
    version   = "latest"
  }

  custom_data = base64encode(local.script_us)

}

#traffic manager

resource "azurerm_traffic_manager_profile" "tm_profile" {
  name                   = var.traffic_manager_name
  resource_group_name    = azurerm_resource_group.rg_fr.name # Any RG is fine; TM is global
  traffic_routing_method = "Geographic"

  dns_config {
    relative_name = var.traffic_manager_name
    ttl           = 30
  }

  monitor_config {
    protocol                     = "HTTP"
    port                         = 80
    path                         = "/"
    interval_in_seconds          = 30
    timeout_in_seconds           = 10
    tolerated_number_of_failures = 3
  }


}

resource "azurerm_traffic_manager_external_endpoint" "endpoint_fr" {
  name              = "server1-fr-endpoint"
  profile_id        = azurerm_traffic_manager_profile.tm_profile.id
  target            = azurerm_public_ip.server1_ip.fqdn
  endpoint_location = var.location_fr
  geo_mappings      = ["WORLD"]
}

resource "azurerm_traffic_manager_external_endpoint" "endpoint_us" {
  name              = "server2-us-endpoint"
  profile_id        = azurerm_traffic_manager_profile.tm_profile.id
  target            = azurerm_public_ip.server2_ip.fqdn
  endpoint_location = var.location_us
  geo_mappings      = ["GEO-AS"]
}

output "server1_public_ip" {
  description = "Public IP address of server1"
  value       = azurerm_public_ip.server1_ip.ip_address
}

output "server2_public_ip" {
  description = "Public IP address of server2"
  value       = azurerm_public_ip.server2_ip.ip_address
}

output "traffic_manager_fqdn" {
  description = "DNS name of the Traffic Manager profile"
  value       = azurerm_traffic_manager_profile.tm_profile.fqdn
}
